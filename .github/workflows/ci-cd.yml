name: Docker Build and Push

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./jhipster-task-app
        file: ./jhipster-task-app/.devcontainer/Dockerfile
        push: true
        tags: watashiwa19/latestdvtaskimagethelatest:latest001
        build-args: |
          VARIANT=17
          INSTALL_MAVEN=true
          INSTALL_GRADLE=true
          NODE_VERSION=16

    - name: Verify Docker image
      run: |
        docker pull watashiwa19/latestdvtaskimagethelatest:latest001
        docker inspect watashiwa19/latestdvtaskimagethelatest:latest001

    - name: Run Docker image and capture logs
      run: |
        docker run -d --name test-container watashiwa19/latestdvtaskimagethelatest:latest001
        docker logs -f test-container &
        DOCKER_PID=$!
        echo "Waiting for application to start (this may take up to 5 minutes)..."
        for i in {1..30}; do
          if docker exec test-container curl -sf http://localhost:8080/management/health > /dev/null 2>&1; then
            echo "Application started successfully"
            kill $DOCKER_PID
            exit 0
          fi
          sleep 10
        done
        echo "Application failed to start within the timeout period"
        kill $DOCKER_PID
        docker logs test-container
        exit 1

    - name: Check application health
      run: |
        if docker exec test-container curl -sf http://localhost:8080/management/health > /dev/null 2>&1; then
          echo "Health check passed"
        else
          echo "Health check failed"
          docker logs test-container
          exit 1
        fi

    - name: Diagnostic information
      if: failure()
      run: |
        echo "Container logs:"
        docker logs test-container
        echo "Container processes:"
        docker top test-container
        echo "Container network:"
        docker network inspect bridge

    - name: Clean up
      if: always()
      run: docker rm -f test-container

    - name: Debug - Docker build logs
      if: failure()
      run: |
        echo "Docker build logs:"
        docker buildx build --progress=plain --load -t watashiwa19/latestdvtaskimagethelatest:latest001 -f ./jhipster-task-app/.devcontainer/Dockerfile ./jhipster-task-app
