name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Cache npm packages
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Install dependencies
      working-directory: ./jhipster-task-app
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
    - name: Remove duplicate test classes
      working-directory: ./jhipster-task-app
      run: |
        find src/test/java/ipsum -type f -name "*.java" -delete
    - name: Make mvnw executable
      working-directory: ./jhipster-task-app
      run: chmod +x mvnw
    - name: Build and run tests
      working-directory: ./jhipster-task-app
      run: |
        ./mvnw clean verify -Pprod
        ./mvnw test
    - name: Run frontend tests
      working-directory: ./jhipster-task-app
      run: npm run test
    - name: Build Docker image
      working-directory: ./jhipster-task-app
      run: |
        ./mvnw -Pprod clean verify jib:dockerBuild -Djib.to.image=${{ secrets.DOCKER_HUB_USERNAME }}/jhipster-task-app:latest

  docker-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/jhipster-task-app:latest
