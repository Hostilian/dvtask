name: Docker Build and Push
on:
  push:
    branches: [ "main" ]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache npm packages
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Debug - List directory contents
      run: |
        cd jhipster-task-app
        ls -R src/test/java

    - name: Clean up test directory
      run: |
        cd jhipster-task-app
        if [ -d "src/test/java/ipsum" ]; then
          find src/test/java/ipsum -type f -exec rm -f {} +
          rm -rf src/test/java/ipsum
        fi
        if [ -d "src/test/java/com/dv/ipsum" ]; then
          find src/test/java/com/dv/ipsum -type f -name "*.java" -exec sed -i 's/package ipsum/package com.dv.ipsum/g' {} +
        fi

    - name: Set Maven Wrapper Permissions
      run: |
        cd jhipster-task-app
        chmod +x mvnw

    - name: Run tests
      run: |
        cd jhipster-task-app
        ./mvnw test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./jhipster-task-app
        file: ./jhipster-task-app/.devcontainer/Dockerfile
        push: true
        tags: watashiwa19/dvtask:latest
        build-args: |
          VARIANT=17
          INSTALL_MAVEN=true
          INSTALL_GRADLE=false
          NODE_VERSION=20

    - name: Verify Docker image
      run: |
        docker pull watashiwa19/dvtask:latest
        docker inspect watashiwa19/dvtask:latest

    - name: Run Docker image and check health
      run: |
        docker run -d --name test-container -p 8080:8080 watashiwa19/dvtask:latest
        echo "Waiting for application to start (this may take up to 10 minutes)..."
        for i in {1..60}; do
          if curl -sf http://localhost:8080/management/health > /dev/null 2>&1; then
            echo "Application started successfully"
            exit 0
          fi
          sleep 10
        done
        echo "Application failed to start within the timeout period"
        docker logs test-container
        exit 1

    - name: Diagnostic information
      if: failure()
      run: |
        echo "Container logs:"
        docker logs test-container
        echo "Container processes:"
        docker top test-container
        echo "Container network:"
        docker network inspect bridge

    - name: Clean up
      if: always()
      run: docker rm -f test-container || true

    - name: Debug - Docker build logs
      if: failure()
      run: |
        echo "Docker build logs:"
        docker buildx build --progress=plain --load -t watashiwa19/dvtask:latest -f ./jhipster-task-app/.devcontainer/Dockerfile ./jhipster-task-app
